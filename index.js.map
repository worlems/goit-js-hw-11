{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const apiKey = '49253539-084e8be9ad99f0e2743df86f8';\n\nconst pixApi = data => {\n  const searchParams = new URLSearchParams({\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n  return fetch(\n    `https://pixabay.com/api/?key=${apiKey}&q=${data}&${searchParams}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport default pixApi;\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst lightbox = new SimpleLightbox('.card-link', {\n  inlineStyles: false,\n  captionsData: 'alt',\n  captionDelay: 250,\n  disableScroll: true,\n});\n\nconst renderImages = (resultData, list) => {\n  const murkup = resultData.map(element => {\n    return `<li class=\"card\">\n                <a class=\"card-link\" href=\"${element.largeImageURL}\">\n                    <img  class=\"card-image\" src=\"${element.webformatURL}\" alt=\"${element.tags}\" />\n                </a>\n                <div class=\"main-content\">\n                    <ul class=\"card-list\">\n                        <li class=\"card-list-li\">\n                            <h3>\n                                likes\n                            </h3>\n                            <p>${element.likes}</p>\n                        </li>\n                        <li class=\"card-list-li\">\n                            <h3>\n                                views\n                            </h3>\n                            <p>${element.views}</p>\n                        </li>\n                        <li class=\"card-list-li\">\n                            <h3>\n                                comments\n                            </h3>\n                            <p>${element.comments}</p>\n                        </li>\n                        <li class=\"card-list-li\">\n                            <h3>\n                                downloads\n                            </h3>\n                            <p>${element.downloads}</p>\n                        </li>\n                    </ul>\n                </div>\n            </li>`;\n  });\n\n  list.insertAdjacentHTML('beforeend', murkup.join(''));\n\n  lightbox.refresh();\n};\n\nexport default renderImages;\n","import pixApi from './js/pixabay-api.js';\nimport renderImages from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('form');\nconst input = document.querySelector('input[data-search]');\nconst loader = document.querySelector('.loader-div');\nconst list = document.querySelector('.list');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  loader.style.visibility = 'visible';\n  const search = input.value.trim();\n  list.innerHTML = '';\n  if (search === '') {\n    iziToast.error({\n      message: 'The input should not be empty',\n    });\n    return;\n  }\n  pixApi(search)\n    .then(data => {\n      const result = data.hits;\n\n      if (result.length !== 0) {\n        renderImages(result, list);\n      } else {\n        iziToast.show({\n          title: '',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          messageColor: 'white',\n          backgroundColor: '#E25757',\n          position: 'topRight',\n        });\n      }\n    })\n    .catch(error => {\n      console.error(error);\n      iziToast.show({\n        title: '',\n        message: 'Sorry, check your internet connection!',\n        messageColor: 'white',\n        backgroundColor: '#E25757',\n        position: 'topRight',\n        timeout: 5000,\n      });\n    })\n    .finally(() => {\n      loader.style.visibility = 'hidden';\n      e.target.reset();\n    });\n});\n"],"names":["apiKey","pixApi","data","searchParams","response","lightbox","SimpleLightbox","renderImages","resultData","list","murkup","element","form","input","loader","e","search","iziToast","result","error"],"mappings":"6vBAAA,MAAMA,EAAS,qCAETC,EAASC,GAAQ,CACrB,MAAMC,EAAe,IAAI,gBAAgB,CACvC,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EACD,OAAO,MACL,gCAAgCH,CAAM,MAAME,CAAI,IAAIC,CAAY,EACpE,EAAI,KAAKC,GAAY,CACjB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACpB,CAAG,CACH,ECbMC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,GACd,aAAc,MACd,aAAc,IACd,cAAe,EACjB,CAAC,EAEKC,EAAe,CAACC,EAAYC,IAAS,CACzC,MAAMC,EAASF,EAAW,IAAIG,GACrB;AAAA,6CACkCA,EAAQ,aAAa;AAAA,oDACdA,EAAQ,YAAY,UAAUA,EAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAQ7DA,EAAQ,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAMbA,EAAQ,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAMbA,EAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAMhBA,EAAQ,SAAS;AAAA;AAAA;AAAA;AAAA,kBAK/C,EAEDF,EAAK,mBAAmB,YAAaC,EAAO,KAAK,EAAE,CAAC,EAEpDL,EAAS,QAAO,CAClB,EC7CMO,EAAO,SAAS,cAAc,MAAM,EACpCC,EAAQ,SAAS,cAAc,oBAAoB,EACnDC,EAAS,SAAS,cAAc,aAAa,EAC7CL,EAAO,SAAS,cAAc,OAAO,EAE3CG,EAAK,iBAAiB,SAAUG,GAAK,CACnCA,EAAE,eAAc,EAChBD,EAAO,MAAM,WAAa,UAC1B,MAAME,EAASH,EAAM,MAAM,KAAI,EAE/B,GADAJ,EAAK,UAAY,GACbO,IAAW,GAAI,CACjBC,EAAS,MAAM,CACb,QAAS,+BACf,CAAK,EACD,MACD,CACDhB,EAAOe,CAAM,EACV,KAAKd,GAAQ,CACZ,MAAMgB,EAAShB,EAAK,KAEhBgB,EAAO,SAAW,EACpBX,EAAaW,EAAQT,CAAI,EAEzBQ,EAAS,KAAK,CACZ,MAAO,GACP,QACE,2EACF,aAAc,QACd,gBAAiB,UACjB,SAAU,UACpB,CAAS,CAET,CAAK,EACA,MAAME,GAAS,CACd,QAAQ,MAAMA,CAAK,EACnBF,EAAS,KAAK,CACZ,MAAO,GACP,QAAS,yCACT,aAAc,QACd,gBAAiB,UACjB,SAAU,WACV,QAAS,GACjB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbH,EAAO,MAAM,WAAa,SAC1BC,EAAE,OAAO,OACf,CAAK,CACL,CAAC"}